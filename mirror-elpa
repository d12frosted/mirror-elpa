#!/usr/bin/env bash

set -ue

# defaults
mirror_path=""
mirror_host="gitlab.com"
mirror_owner=""
mirror_repo=""
mirror_repo_branch_name="master"
mirror_url=""
access_login=""
access_token=""
commit_name=""
commit_email=""
elpa_clone_path="$HOME/.cache/elpa-clone"
elpa_clone_url="https://github.com/dochang/elpa-clone.git"

function git_config_hook {
  log "Git config hook"
}

# load configurations
config_file=$1
# shellcheck disable=SC1090
[ -f "$config_file" ] && source "$config_file"

# setup mirror repo URL
if [ -z "$mirror_url" ]; then
  mirror_url="https://${access_login}:${access_token}@${mirror_host}/${mirror_owner}/${mirror_repo}.git"
fi

function log {
  echo "[$(date '+%d/%m/%y %H:%M:%S')]" "$@"
}

function clone {
  log "Updating mirror for $2 ($1)"
  emacs -l "$elpa_clone_path/elpa-clone.el" -nw --batch --eval="(elpa-clone \"$1\" \"$mirror_path/$2\")"
}

if [[ "$mirror_path" = "" ]]; then
  mirror_path="$(mktemp -d)"
fi

trap '[ "$?" -eq 0 ] || log Error! Could not update elpa mirrors!' EXIT

log "Start updating elpa mirrors"
log "mirror_path: $mirror_path"
log "elpa_clone_path: $elpa_clone_path"
log "PATH: $PATH"

if [[ ! -d $elpa_clone_path ]]; then
  log "elpa-clone tool is missing, installing it..."
  git clone --depth 1 "$elpa_clone_url" "$elpa_clone_path"
else
  log "updating elpa-clone"
  (
    cd "$elpa_clone_path"
    git fetch origin
    git reset --hard origin/master
  )
fi

if [[ ! -d "$mirror_path" ]]; then
  log "cloning mirror repository"
  git clone --depth 1 "$mirror_url" "$mirror_path"
fi

clone "http://orgmode.org/elpa/" "org"
clone "https://elpa.gnu.org/packages/" "gnu"
clone "rsync://melpa.org/packages/" "melpa"
clone "rsync://stable.melpa.org/packages/" "stable-melpa"

(
  cd "$mirror_path"

  if [ -d .git ] || git rev-parse --git-dir > /dev/null 2>&1; then
    log "Configure repository"
    git config user.name "$commit_name"
    git config user.email "$commit_email"
    git_config_hook
    git add --all
    if [ -z "$(git status --porcelain)" ]; then
      log "Nothing to commit"
    else
      log "Committing and pushing all changes to mirror repository"
      git commit -m "snapshot $(date '+%d/%m/%y %H:%M:%S')"
    fi
    if [[ "$mirror_url" != "" ]]; then
      git push "$mirror_url" "$mirror_repo_branch_name"
    fi
  fi
)

log "Done updating elpa mirrors"
